name: 🔄 Backup System with Logs & Archives

on:
  push:
    paths:
      - 'Source/**'
    branches: [ main ]
  schedule:
    - cron: '0 2 * * *'  # Tous les jours à 2h UTC
  workflow_dispatch:

env:
  SOURCE_DIR: 'Source'
  BACKUP_DIR: 'Backup'
  ARCHIVE_DIR: 'Archives'
  LOGS_DIR: 'Logs'

jobs:
  backup-with-logs:
    name: 📦 Backup avec Logs et Archives
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
    # Étape 1: Checkout
    - name: 📥 Checkout du code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    # Étape 2: Configuration
    - name: ⚙️ Configuration Git
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        mkdir -p $ARCHIVE_DIR $LOGS_DIR

    # Étape 3: Création du log
    - name: 📝 Début du logging
      run: |
        TIMESTAMP=$(date +%Y%m%d_%H%M%S)
        LOG_FILE="$LOGS_DIR/backup_${TIMESTAMP}.log"
        echo "🟢 DEBUT BACKUP - $TIMESTAMP" > $LOG_FILE
        echo "================================" >> $LOG_FILE
        echo "Source: $SOURCE_DIR" >> $LOG_FILE
        echo "Backup: $BACKUP_DIR" >> $LOG_FILE
        echo "Archive: $ARCHIVE_DIR" >> $LOG_FILE
        echo "Log: $LOG_FILE" >> $LOG_FILE
        echo "================================" >> $LOG_FILE

    # Étape 4: Analyse avant backup
    - name: 🔍 Analyse pré-backup
      run: |
        echo "📊 ANALYSE PRE-BACKUP" >> $LOG_FILE
        echo "Fichiers dans Source:" >> $LOG_FILE
        find $SOURCE_DIR -type f >> $LOG_FILE 2>/dev/null || echo "Aucun fichier" >> $LOG_FILE
        echo "---" >> $LOG_FILE

    # Étape 5: Archivage avant modification
    - name: 🗂️ Archivage du Backup actuel
      run: |
        if [ -d "$BACKUP_DIR" ] && [ "$(ls -A $BACKUP_DIR 2>/dev/null)" ]; then
          ARCHIVE_NAME="backup_$(date +%Y%m%d_%H%M%S).tar.gz"
          tar -czf "$ARCHIVE_DIR/$ARCHIVE_NAME" "$BACKUP_DIR"/
          echo "📦 Archive créée: $ARCHIVE_NAME" >> $LOG_FILE
          echo "📁 Fichiers archivés:" >> $LOG_FILE
          tar -tzf "$ARCHIVE_DIR/$ARCHIVE_NAME" | head -10 >> $LOG_FILE
        else
          echo "ℹ️ Aucun backup précédent à archiver" >> $LOG_FILE
        fi

    # Étape 6: Synchronisation
    - name: 🔄 Synchronisation Source → Backup
      run: |
        echo "🔄 SYNCHRONISATION" >> $LOG_FILE
        rm -rf $BACKUP_DIR/*
        mkdir -p $BACKUP_DIR
        
        if [ -d "$SOURCE_DIR" ] && [ "$(ls -A $SOURCE_DIR 2>/dev/null)" ]; then
          cp -r $SOURCE_DIR/* $BACKUP_DIR/ 2>/dev/null || true
          echo "✅ Fichiers copiés avec succès" >> $LOG_FILE
          echo "📋 Contenu Backup après sync:" >> $LOG_FILE
          find $BACKUP_DIR -type f >> $LOG_FILE
        else
          echo "
