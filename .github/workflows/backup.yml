name: Backup Source to Backup

on:
  push:
    paths:
      - 'Source/**'
    branches: [ test2 ]
  workflow_dispatch:  # Déclenchement manuel

jobs:
  backup:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        ref: test2  # Spécifier la branche test2

    - name: Setup Git config
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"

    - name: Sync Source to Backup
      run: |
        # Créer le dossier Backup s'il n'existe pas
        mkdir -p Backup
        
        # Synchroniser le contenu (supprimer ancien, copier nouveau)
        if [ -d "Backup" ]; then
          rm -rf Backup/*
        fi
        
        # Copier tout le contenu de Source vers Backup
        if [ -d "Source" ]; then
          cp -r Source/* Backup/ 2>/dev/null || true
          echo "✅ Contenu de Source copié vers Backup"
        else
          echo "❌ Le dossier Source n'existe pas"
        fi
        
        # Afficher le contenu pour debug
        echo "Contenu de Backup après sync:"
        ls -la Backup/ || echo "Backup vide"

    - name: Check for changes
      id: changes
      run: |
        git add Backup/
        if git diff --staged --quiet; then
          echo "has_changes=false" >> $GITHUB_OUTPUT
          echo "🔵 Aucun changement détecté"
        else
          echo "has_changes=true" >> $GITHUB_OUTPUT
          echo "🟢 Changements détectés, commit à faire"
        fi

    - name: Commit and push changes
      if: steps.changes.outputs.has_changes == 'true'
      run: |
        git commit -m "🔄 Sync automatique: Source → Backup [skip ci]"
        git push origin test2
        echo "✅ Changements poussés sur la branche test2"
